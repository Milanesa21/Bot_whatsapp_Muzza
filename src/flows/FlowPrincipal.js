const { addKeyword, EVENTS } = require("@bot-whatsapp/bot");
const { resetPedido, pedidoActual } = require("../utils/resetPedido");
const flowMenuPizzeria = require("./FlowPizzeria");
const flowMenuPanaderia = require("./FlowPanaderia");
const flowMenuSandwiches = require("./FlowSandwiches");
const flowConsultas = require("./FlowConsultas");

const flowPrincipal = addKeyword([
  "Hola",
  "jola",
  "alo",
  "ole",
  "Buenos d√≠as",
  "Buenas tardes",
  "Buenas noches",
  "Saludos",
  "Hola, buenas",
  "Hola, buenos d√≠as",
  "Hola, buenas tardes",
  "Hola, buenas noches",
  "Hola, ¬øc√≥mo est√°n?",
  "Buen d√≠a",
  "Hola, buen d√≠a",
  "Hola, buenas noches",
  "Hola, buenas tardes",
  "Hola, ¬øc√≥mo est√°s?",
  "Hola, ¬øc√≥mo est√°?",
  "ola",
  "holi",
  "holis",
  "jolis",
  "holas",
  "holus",
  "oa",
])
  .addAction(async (_, { flowDynamic }) => {
    resetPedido(); // Reiniciar el pedido al iniciar una nueva conversaci√≥n
    await flowDynamic(
      "Hola, aprovech√° un maravilloso descuento pidiendo por nuestra p√°gina! https://pedidos.masdelivery.com/muzza"
    );
  })
  .addAnswer("¬øQu√© deseas hacer hoy?")
  .addAnswer(
    [
      "1Ô∏è‚É£ Ver nuestro men√∫ de *Pizzer√≠a* üçï",
      "2Ô∏è‚É£ Ver nuestro men√∫ de *Panader√≠a* ü•ê",
      "3Ô∏è‚É£ Ver nuestro men√∫ de *S√°ndwiches* ü•™",
      "4Ô∏è‚É£ Realizar una *Consulta* üìù",
      "\nPuedes responder con el n√∫mero o escribir lo que deseas.",
    ].join("\n"),
    { capture: true },
    async (ctx, { gotoFlow, flowDynamic, fallBack }) => {
      const respuesta = ctx.body.toLowerCase();

      if (respuesta.includes("1") || respuesta.includes("pizz")) {
        pedidoActual.tipo = "Pizzer√≠a"; // Asignar el tipo de men√∫
        await flowDynamic("Has seleccionado la opci√≥n de Pizzer√≠a üçï");
        return gotoFlow(flowMenuPizzeria);
      } else if (respuesta.includes("2") || respuesta.includes("pan")) {
        pedidoActual.tipo = "Panader√≠a"; // Asignar el tipo de men√∫
        await flowDynamic("Has seleccionado la opci√≥n de Panader√≠a ü•ê");
        return gotoFlow(flowMenuPanaderia);
      } else if (respuesta.includes("3") || respuesta.includes("sandwich")) {
        pedidoActual.tipo = "S√°ndwiches"; // Asignar el tipo de men√∫
        await flowDynamic("Has seleccionado la opci√≥n de S√°ndwiches ü•™");
        return gotoFlow(flowMenuSandwiches);
      } else if (respuesta.includes("4") || respuesta.includes("consul")) {
        await flowDynamic("Vamos a resolver tu consulta üìù");
        return gotoFlow(flowConsultas);
      } else {
        return fallBack(
          "Por favor, selecciona una opci√≥n v√°lida: 1 (Pizzer√≠a), 2 (Panader√≠a), 3 (S√°ndwiches) o 4 (Consulta)"
        );
      }
    }
  );

module.exports = flowPrincipal;
